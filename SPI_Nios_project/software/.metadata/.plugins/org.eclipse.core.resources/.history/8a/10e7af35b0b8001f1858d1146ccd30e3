/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>

#include "io.h"
#include "alt_types.h"
#include "sys/alt_irq.h"
#include "sys/alt_stdio.h"
#include "system.h"
#include <unistd.h>
#include <string.h>

#include <altera_avalon_pio_regs.h>

int status_spi;

int main()
{
	printf("Hello from Nios II!\n");



// SETTINGS
	IOWR_ALTERA_AVALON_PIO_DATA(DELAY_SPI_BASE, 60);// SPI delay between cs assertion and 1th spi clk pulse

	IOWR_ALTERA_AVALON_PIO_DATA(SPI_TX_REGISTER_0_BASE, 10);// Write to SPI register 0


	// SPI COMMUNICATION
	IOWR_ALTERA_AVALON_PIO_DATA(START_SPI_REGISTER_BASE, 0b000001); // start spi communications
	   do{
	   	   status_spi=IORD_ALTERA_AVALON_PIO_DATA(END_SPI_BASE);
	   }
	   while( status_spi==0 );// wait end communications

	   int spi_data = IORD_ALTERA_AVALON_PIO_DATA(SPI_RX_REGISTER_0_BASE); // end spi communications


	    printf("SPI register 0 data: %u\n", spi_data); // Prints in hexadecimal format

	   while(1){


	}
  return 0;
}
